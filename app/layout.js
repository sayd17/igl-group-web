"use client";
import "bootstrap/dist/css/bootstrap.min.css";
import Link from "next/link";
import axiosApi from "./api/axios-common";
// import "@/app/assets/css/app.css";
import localFont from "next/font/local";
import "./globals.css";
import router from "next/navigation";
import { ContextProvider } from "./context/contextProvider";
import Head from "next/head";
import { useEffect } from "react";
import BootstrapClient from "@/components/BootstrapClient.js";
import toast, { Toaster, useToasterStore } from "react-hot-toast";
import Script from "next/script";
import "animate.css";
import Footer from "@/components/footer/Footer";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});

const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({ children }) {
  const { toasts } = useToasterStore();
  const TOAST_LIMIT = 1;

  // Enforce Limit
  useEffect(() => {
    toasts
      .filter((t) => t.visible) // Only consider visible toasts
      .filter((_, i) => i >= TOAST_LIMIT) // Is toast index over limit
      .forEach((t) => toast.dismiss(t.id)); // Dismiss â€“ Use toast.remove(t.id) removal without animation
  }, [toasts]);

  useEffect(() => {
    // Function to open the overlay navigation
    function openNav() {
      document.getElementById("myNav").style.height = "100%";
    }

    // Function to close the overlay navigation
    function closeNav() {
      document.getElementById("myNav").style.height = "0%";
    }
  }, []);

  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <ContextProvider>{children}</ContextProvider>

        <BootstrapClient />

        <Toaster
          position="top-center"
          reverseOrder={true}
          gutter={8}
          containerClassName=""
          containerStyle={{ top: 140 }}
          toastOptions={{
            // Define default options
            className: "",
            duration: 3000,
            style: {
              width: "20%",
              fontWeight: "bold",
            },
          }}
        />
        <Footer />
        {/* <Script
          src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"
          strategy="beforeInteractive"
        /> */}
      </body>
    </html>
  );
}
